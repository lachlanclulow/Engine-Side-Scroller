import org.newdawn.slick.Graphics;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.tiled.TiledMap;

public class World extends BaseWorld implements traverseConstants {

	private static TiledMap map;
	private Player player;
	
	World() throws SlickException {
		map = new TiledMap("assets/testMap.tmx");
		player = new Player();
	}
	
	public void update(double dirX, double dirY, int delta) {
		player.update(dirX, dirY, delta);
	}
	
	public void render(Graphics g) {
		map.render(0, 0);
		player.render();
	}
	
	/** 
	 *  Evaluates whether a tile to be embarked on is traversable
	 *  
	 *  @param map TiledMap object on which tiles are being traversed
	 *  @param travelDistance the distance travelled from the players 
	 *  current x or y coordinate
	 *  @param direction 0 for travel in the x direction, 1 for travel in 
	 *  y direction
	 */
	public static boolean tileTraversable(double xCoord, double yCoord, 
			double travelDistance, int direction) {
		int id;
		String result = "0";

		// for x direction
		if (direction == XDIRECTION) {
			// Check x coordinate is on the map
			if (xCoord + travelDistance <= 1 || 
					xCoord + travelDistance >= 
					map.getWidth() * map.getTileWidth())
			{
				return false;
			}
			// Check tile is traversable
			id = map.getTileId(
					(int) Math.floor(
							(xCoord + travelDistance)/map.getTileWidth()),
					(int) Math.floor(yCoord/map.getTileHeight()), 0);
			result = map.getTileProperty(id, "block", "0");
		}
		// for y direction
		else if (direction == YDIRECTION){
			// Check y coordinate is on the map
			if (yCoord + travelDistance <= 1 ||
					yCoord + travelDistance >=
					map.getHeight() * map.getTileHeight())
			{
				return false;
			}
			// Check tile is traversable
			id = map.getTileId(
					(int) Math.floor(xCoord/map.getTileWidth()),
					(int) Math.floor(
							(yCoord + travelDistance)/map.getTileHeight()), 0);
			result = map.getTileProperty(id, "block", "0");
		}
		
		if (result.equals("1")) {
			return false;
		}
		return true;
	}
	
}
